[{"C:\\Users\\Evgen\\Documents\\VS Code\\Projects\\inventory-page\\src\\App.js":"1","C:\\Users\\Evgen\\Documents\\VS Code\\Projects\\inventory-page\\src\\index.js":"2"},{"size":8475,"mtime":1606409074743,"results":"3","hashOfConfig":"4"},{"size":219,"mtime":1606291718914,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"13y3c00",{"filePath":"9","messages":"10","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Evgen\\Documents\\VS Code\\Projects\\inventory-page\\src\\App.js",["11","12"],"import React, { useState } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport MuiListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { Avatar, Badge, Button, Card, CardActions, CardContent, Collapse, Container, Paper, SvgIcon } from \"@material-ui/core\";\nimport avatarSrc from \"./images/avatar.svg\";\nimport logoSrc from \"./images/logo.svg\";\nimport inventorySrc from \"./images/drawerInventory.svg\";\nimport mainPageSrc from \"./images/drawerMainPage.svg\";\nimport storageSrc from \"./images/drawerStorage.svg\";\nimport auctionSrc from \"./images/drawerAuction.svg\";\nimport usersSrc from \"./images/drawerUsers.svg\";\nimport settingsSrc from \"./images/drawerSettings.svg\";\nimport currencySrc from \"./images/drawerCurrency.svg\";\nimport messagesSrc from \"./images/drawerMessages.svg\";\nimport orderSrc from \"./images/drawerOrder.svg\";\n\nconst colors = {\n  white: `rgba(255, 255, 255, 1)`,\n  grey0: `rgba(90, 97, 105, 1)`, // text\n  grey1: `rgba(115, 129, 143, 1)`, //\n  grey2: `rgba(189, 194, 209, 1)`, // text, icon\n  grey3: `rgba(217, 222, 229, 1)`, // icon\n  grey4: `rgba(245, 246, 248, 1)`, // content background\n};\nconst categoriesList = [\n  [\"Главная страница\"],\n  [\"Инвентарь\"],\n  [\"Мой склад\", [\"Задачи складу\", \"Отправлено\", \"На складе\"]],\n  [\"Аукцион\"],\n  [\"Пользователи\"],\n  [\"Настройки\"],\n  [\"Сообщения\"],\n  [\"Финансы\"],\n  [\"Мои заказы\"],\n];\nconst categoriesIcons = [\n  <img alt=\"Main page icon\" src={mainPageSrc} />,\n  <img alt=\"Inventory icon\" src={inventorySrc} />,\n  <img alt=\"Storage icon\" src={storageSrc} />,\n  <img alt=\"Auction icon\" src={auctionSrc} />,\n  <img alt=\"Users icon\" src={usersSrc} />,\n  <img alt=\"Settings icon\" src={settingsSrc} />,\n  <img alt=\"Messages icon\" src={messagesSrc} />,\n  <img alt=\"Currency icon\" src={currencySrc} />,\n  <img alt=\"Order icon\" src={orderSrc} />,\n];\nconst drawerWidth = 200;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    width: \"100%\",\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    height: theme.spacing(7),\n    marginLeft: drawerWidth,\n    boxShadow: `0px 5px 19px 0px rgba(90, 97, 105, 0.12)`,\n    backgroundColor: colors.white,\n    color: colors.grey0,\n  },\n  toolbar: {\n    minHeight: theme.spacing(7),\n  },\n  appBar_title: {\n    flexGrow: 1,\n    fontSize: \"13px\",\n    fontWeight: 400,\n    lineHeight: \"15px\",\n    letterSpacing: \"0em\",\n  },\n  appBar_icon: {\n    color: colors.grey3,\n  },\n  avatar: {\n    margin: \"0px 23px\",\n  },\n  logoWrapper: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    boxShadow: `0px 1px 2px 0px rgba(225, 229, 235, 0.8),\n                0px 13px 27px 0px rgba(90, 97, 105, 0.15)`,\n  },\n  drawer_title: {\n    fontSize: \"13px\",\n    fontWeight: 500,\n    lineHeight: \"15px\",\n    letterSpacing: \"0em\",\n    color: \"rgba(61, 81, 112, 1)\",\n  },\n  listItemIcon: {\n    height: \"16px\",\n    width: \"16px\",\n    minWidth: \"16px\",\n    margin: \"16px\",\n    justifyContent: \"center\",\n  },\n\n  content: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    flexGrow: 1,\n    padding: \"90px 53px 79px 51px\",\n    backgroundColor: colors.grey4,\n  },\n  paper: {\n    height: \"136px\",\n    width: \"382px\",\n  },\n}));\n\nconst ListItem = withStyles((theme) => ({\n  root: {\n    height: \"50px\",\n\n    \"&$selected\": {\n      borderLeft: `5px solid rgba(0, 123, 255, 1)`,\n      backgroundColor: \"transparent\",\n    },\n    \"&$selected:hover\": {\n      borderLeft: `5px solid rgba(0, 123, 255, 1)`,\n    },\n    \"&:hover\": {},\n  },\n  selected: {},\n}))(MuiListItem);\n\nconst ListSubItem = withStyles((theme) => ({\n  root: {\n    height: \"50px\",\n    paddingLeft: \"50px\",\n    fontSize: \"13px\",\n    fontWeight: 400,\n    lineHeight: \"15px\",\n    letterSpacing: \"0em\",\n    color: \"rgba(189, 194, 209, 1)\",\n    \"&$selected\": {\n      backgroundColor: \"transparent\",\n      color: \"rgba(0, 123, 255, 1)\",\n    },\n    \"&$selected:hover\": {},\n    \"&:hover\": {},\n  },\n  selected: {},\n}))(MuiListItem);\n\nfunction ResponsiveDrawer(props) {\n  const [open, setOpen] = useState(false);\n  const [subSelectedIndex, setSubSelectedIndex] = useState(null);\n  const classes = useStyles();\n  const userName = \"Директор\";\n  const text_Dashboard = \"Dashboard\";\n  const handleClick = () => {\n    setSubSelectedIndex(0);\n    setOpen(!open);\n  };\n  const handleSelectSubItem = (index) => {\n    setSubSelectedIndex(index);\n  };\n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar + \" \" + classes.logoWrapper}>\n        <img alt=\"company logo\" src={logoSrc} />\n      </div>\n      <Divider />\n      <List disablePadding>\n        {categoriesList.map((item, index) => (\n          <>\n            <ListItem disableGutters button key={item[0]} onClick={item.length > 1 ? handleClick : \"\"} selected={open && item.length > 1}>\n              <ListItemIcon className={classes.listItemIcon}>{categoriesIcons[index]}</ListItemIcon>\n              <ListItemText disableTypography primary={item[0]} className={classes.drawer_title} />\n            </ListItem>\n            {item.length > 1 ? (\n              <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                <List disablePadding>\n                  {item[1].map((subItem, subIndex) => (\n                    <ListSubItem\n                      button\n                      key={subItem}\n                      onClick={() => handleSelectSubItem(subIndex)}\n                      selected={subIndex === subSelectedIndex}\n                    >\n                      <ListItemText disableTypography primary={subItem} />\n                    </ListSubItem>\n                  ))}\n                </List>\n              </Collapse>\n            ) : (\n              \"\"\n            )}\n            <Divider />\n          </>\n        ))}\n      </List>\n    </div>\n  );\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar className={classes.toolbar}>\n          <Typography noWrap className={classes.appBar_title}>\n            {text_Dashboard}\n          </Typography>\n          <Divider orientation=\"vertical\" light />\n          {/*TODO fix badge position */}\n          <Badge badgeContent={2} color=\"error\">\n            <NotificationsIcon className={classes.appBar_icon} />\n          </Badge>\n          {/*TODO change color */}\n          <Divider orientation=\"vertical\" light />\n          <Avatar alt=\"user avatar\" src={avatarSrc} className={classes.avatar} />\n          <Typography noWrap>{userName}</Typography>\n          {/*TODO wrap icon with btn */}\n          <ArrowDropDownIcon className={classes.appBar_icon} />\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer}>\n        <Drawer\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          variant=\"permanent\"\n          open\n        >\n          {drawer}\n        </Drawer>\n      </nav>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Typography variant=\"h3\">{text_Dashboard}</Typography>\n        <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\n          <Paper elevation={3} className={classes.paper} />\n          <Paper elevation={3} className={classes.paper} />\n          <Paper elevation={3} className={classes.paper} />\n        </div>\n\n        <Typography variant=\"h3\">Список товаров</Typography>\n        <Card>\n          <CardContent>\n            <Typography className={classes.drawer_title} color=\"textSecondary\" gutterBottom>\n              Here will Table\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <Button size=\"small\">Learn More</Button>\n          </CardActions>\n        </Card>\n      </main>\n    </div>\n  );\n}\n\nexport default ResponsiveDrawer;\n","C:\\Users\\Evgen\\Documents\\VS Code\\Projects\\inventory-page\\src\\index.js",[],{"ruleId":"13","severity":1,"message":"14","line":14,"column":75,"nodeType":"15","messageId":"16","endLine":14,"endColumn":84},{"ruleId":"13","severity":1,"message":"17","line":14,"column":93,"nodeType":"15","messageId":"16","endLine":14,"endColumn":100},"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'SvgIcon' is defined but never used."]